name: Terraform workspace infra

on:
  push:
    branches:
      - Master
      - dev
      - staging


jobs:
  terraform:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0
          
     # - name: Configure AWS Credentials
     #   uses: aws-actions/configure-aws-credentials@v3
     #   with:
     #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
     #     aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
     #     aws-region: ap-south-1

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
            role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.ROLE_NAME }}
            aws-region: ${{ secrets.AWS_REGION }}

      - name: Set Terraform Workspace
        id: workspace
        run: |
          if [[ "${GITHUB_REF##*/}" == "Master" ]]; then
            echo "::set-output name=workspace::prod"
          elif [[ "${GITHUB_REF##*/}" == "dev" ]]; then
            echo "::set-output name=workspace::dev"
          elif [[ "${GITHUB_REF##*/}" == "staging" ]]; then
            echo "::set-output name=workspace::staging"
          else
            echo "::set-output name=workspace::default"
          fi

      - name: Terraform Init
       # working-directory: 
        run: terraform init

      - name: Terraform plan
       # working-directory: 
        run: |
          terraform workspace new ${{ steps.workspace.outputs.workspace }} || terraform workspace select ${{ steps.workspace.outputs.workspace }}
          terraform plan

      - name: Terraform Apply
      #  working-directory: 
        run: |
          terraform workspace new ${{ steps.workspace.outputs.workspace }} || terraform workspace select ${{ steps.workspace.outputs.workspace }}
          terraform apply -var-file=${{ github.ref_name }}.tfvars -out=tfplan -auto-approve
